rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // ユーザーコレクションのルール
    match /users/{userId} {
      // 認証されたユーザーは自分のドキュメントを読み書き可能
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // 新規ユーザー作成時は認証されたユーザーのみ
      allow create: if request.auth != null && request.auth.uid == userId;
    }
    
    // 投稿コレクションのルール
    match /posts/{postId} {
      // 認証されたユーザーは読み取り可能
      allow read: if request.auth != null;
      // 管理者のみ書き込み可能（必要に応じて調整）
      allow write: if request.auth != null;
    }
    
    // クーポンコレクションのルール
    match /coupons/{couponId} {
      // 認証されたユーザーは読み取り可能
      allow read: if request.auth != null;
      // 管理者のみ書き込み可能（必要に応じて調整）
      allow write: if request.auth != null;
    }
    
    // 通知コレクションのルール
    match /notifications/{notificationId} {
      // 認証されたユーザーは読み取り可能
      allow read: if request.auth != null;
      // 管理者のみ書き込み可能（必要に応じて調整）
      allow write: if request.auth != null;
    }
    
    // ランキングコレクションのルール
    match /rankings/{rankingId} {
      // 認証されたユーザーは読み取り可能
      allow read: if request.auth != null;
      // 管理者のみ書き込み可能（必要に応じて調整）
      allow write: if request.auth != null;
    }
    
    // スロット履歴コレクションのルール
    match /slot_history/{slotId} {
      // 認証されたユーザーは自分のスロット履歴のみ読み書き可能
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      // 新規作成時は認証されたユーザーのみ
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // QR JTIコレクションのルール（リプレイ防止用）
    match /qrJti/{jti} {
      // サーバーサイド（Firebase Functions）からのみ書き込み可能
      // クライアントからの直接アクセスは禁止
      allow read, write: if false;
    }
    
    // チェックインコレクションのルール
    match /check_ins/{checkInId} {
      // 認証されたユーザーは自分のチェックイン履歴のみ読み取り可能
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      // 書き込みはサーバーサイドのみ
      allow write: if false;
    }
    
    // バッジマスタ（閲覧のみ）
    match /badges/{badgeId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.token.role in ['admin', 'company'];
    }

    // ユーザーの獲得バッジ（階層: user_badges/{userId}/badges/{badgeId}）
    match /user_badges/{userId}/badges/{badgeId} {
      allow read: if request.auth != null && request.auth.uid == userId;

      allow create: if request.auth != null
        && request.auth.uid == userId
        && request.resource.data.keys().hasAll(['userId','badgeId','unlockedAt','progress','requiredValue','isNew'])
        && request.resource.data.userId == userId
        && request.resource.data.badgeId == badgeId
        && request.resource.data.unlockedAt is timestamp
        && request.resource.data.progress is int
        && request.resource.data.requiredValue is int
        && request.resource.data.isNew is bool;

      // isNew のみ更新可
      allow update: if request.auth != null
        && request.auth.uid == userId
        && request.resource.data.userId == resource.data.userId
        && request.resource.data.badgeId == resource.data.badgeId
        && request.resource.data.requiredValue == resource.data.requiredValue
        && request.resource.data.progress == resource.data.progress
        && request.resource.data.unlockedAt == resource.data.unlockedAt
        && request.resource.data.diff(resource.data).changedKeys().hasOnly(['isNew'])
        && request.resource.data.isNew is bool;

      // 自分のバッジは削除可（ロックへ戻す用途）
      allow delete: if request.auth != null && request.auth.uid == userId;
    }

    // バッジ進捗
    match /badge_progress/{docId} {
      // 自分の進捗のみ閲覧可
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;

      // 自分の進捗のみ作成/更新可（基本的な型チェック）
      allow create, update: if request.auth != null
        && request.resource.data.userId == request.auth.uid
        && request.resource.data.keys().hasAll(['userId','badgeType','currentValue'])
        && request.resource.data.userId is string
        && request.resource.data.badgeType is string
        && request.resource.data.currentValue is int;

      allow delete: if false;
    }

    // ポイント取引コレクションのルール
    match /point_transactions/{transactionId} {
      // 認証されたユーザーは自分のポイント取引履歴のみ読み取り可能
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      // 書き込みはサーバーサイドのみ
      allow write: if false;
    }
    
    // 店舗コレクションのルール
    match /stores/{storeId} {
      // 認証されたユーザーは読み取り可能
      allow read: if request.auth != null;
      // ストアロールのユーザーのみ書き込み可能
      allow write: if request.auth != null && 
        request.auth.token.role in ['store', 'company', 'admin'];
    }
    
    // お知らせコレクションのルール
    match /announcements/{announcementId} {
      // 認証されたユーザーは読み取り可能
      allow read: if request.auth != null;
      // 管理者のみ書き込み可能
      allow write: if request.auth != null && 
        request.auth.token.role in ['admin', 'company'];
    }
    
    // その他のコレクションは認証されたユーザーのみ読み取り可能
    match /{document=**} {
      allow read: if request.auth != null;
    }
  }
}
